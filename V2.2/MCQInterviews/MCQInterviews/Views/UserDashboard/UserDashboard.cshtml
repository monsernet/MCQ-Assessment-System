@model MCQInterviews.Models.ViewModels.DashboardViewModel
@using MCQInterviews.Models.ViewModels

@{

}

<div class="container py-2">
    <div class="card">
        <div class="card-header text-center">
            <h5 class="text-primary">User Dashboard Overview</h5>
        </div>
        <div class="card-body">
            <!-- User Profile Overview -->
            <div class="user-profile-overview">
                <div class="row">
                    <div class="col-md-5">
                        <div class="card">
                            <div class="card-body">
                                <div class="profile-picture">
                                    @if (Model.ProfileImage != null)
                                    {
                                        <img src="@Model.ProfileImage" class="img-fluid img-thumbnail" alt="User Profile Picture">
                                    }
                                    else
                                    {
                                        <img src="~/img/no-image.webp" class="img-fluid img-thumbnail" alt="User Profile Picture">
                                    }
                                </div>
                                <div class="user-info">
                                    <p><strong>Email: @Model.Email</strong></p>
                                    <p><strong>Phone: @Model.Phone</strong></p>
                                    <p><strong>Country: @Model.Country</strong></p>
                                    <p><strong>Joined on: @Model.JoinDate.ToString("MM/dd/yyyy") </strong></p>
                                </div>
                            </div>
                        </div>
                       
                    </div>
                    <div class="col-md-7">
                        <div class="card">
                            <div class="card-body">
                                <div class="user-info">
                                    <p><strong>User: </strong>@Model.FirstName @Model.LastName</p>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="card bg-secondary text-white">
                                                <div class="card-body d-flex align-items-center justify-content-between">
                                                    <div>
                                                        <h5 class="card-title text-end">Total MCQs</h5>
                                                        <h2 class="card-text text-end">@Model.TotalMCQs</h2>
                                                    </div>
                                                    <i class="fa fa-question-circle fa-3x"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="card bg-danger  ">
                                                <div class="card-body d-flex align-items-center justify-content-between">
                                                    <div class="text-white">
                                                        <h5 class="card-title text-end">Total Points</h5>
                                                        <h2 class="card-text text-end">@Model.TotalPoints</h2>
                                                    </div>
                                                    <div class="custom-icon-3x-circle text-primary">
                                                        <i class="fa fa-gift fa-2x text-danger"></i>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="card bg-primary  ">
                                                <div class="card-body d-flex align-items-center justify-content-between">
                                                    <div class="text-white">
                                                        <h5 class="card-title text-end">Performance</h5>
                                                        <h2 class="card-text text-end">@Math.Round(Model.ProgressPercentage, 2).ToString("0.00")%</h2>
                                                    </div>
                                                    <div class="custom-icon-3x-circle text-primary">
                                                        <i class="fa fa-percent fa-2x text-primary"></i>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="progress-container mt-3">
                                        <div class="progress-bar" style="width: @Math.Round(Model.ProgressPercentage, 2).ToString("0.00")%;">
                                            <span class="progress-text">@Math.Round(Model.ProgressPercentage, 2).ToString("0.00")%</span>
                                        </div>
                                    </div>
                                    <!-- Achievements -->
                                    <div class="achievements mt-3">
                                        <p><strong>Badges awarded:</strong></p>
                                        <div class="text-center">
                                            <img src="~/img/badges/1.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Apprentice Tester")) {
                                            <text>awarded</text>
}" title="Apprentice Tester Badge : awarded for at least one test passed successfully. " />
                                            <img src="~/img/badges/2.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Consistent Achiever")) {
                                            <text>awarded</text>
 }" title="Consistent Achiever Badge  : awarded for a score of more than 70% in 5 different tests. " />
                                            <img src="~/img/badges/3.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Elite Performer")) {
                                            <text>awarded</text>
 }" title="Elite Performer Badge : awarded for  a score of more than 90% in at least 5 tests." />
                                            <img src="~/img/badges/4.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Master of Levels")) {
                                            <text>awarded</text>
 }" title="Master of Levels Badge : awarded for at least one test passed successfully in each level of a job title." />
                                            <img src="~/img/badges/5.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Premium Tester")) {
                                            <text>awarded</text>
 }" title="Premium Tester Badge : awarded for at least one paid test passed successfully." />
                                            <img src="~/img/badges/6.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Diversified Expert")) {
                                            <text>awarded</text>
 }" title="Diversified Expert Badge : awarded for at least one test passed successfully in each of 3 job categories. " />
                                            <img src="~/img/badges/7.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Decathlete")) {
                                            <text>awarded</text>
 }" title="Decathlete Badge : awarded for at least 10 tests with a score of equal or more than 70%." />
                                            <img src="~/img/badges/8.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Score Achiever")) {
                                            <text>awarded</text>
 }" title="Score Achiever Badge : awarded for more than 20 tests with a score of equal or more than 70%." />
                                            <img src="~/img/badges/9.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Master Tester")) {
                                            <text>awarded</text>
 }" title="Master Tester Badge : awarded for more than 30 tests with a score of equal or more than 70%." />
                                            <img src="~/img/badges/10.png" class="img-fuild badge-image @if(Model.Achievements.Contains("Category Maestro")) {
                                            <text>awarded</text>
 }" title="Category Maestro Badge : awarded for at least 10 tests with 70% or more in each job category in at least 5 categories." />
                                        </div>
                                    </div>
                                    <div class="feedback-container mt-3">
                                        <p><strong>Feedback:</strong></p>
                                        <div class="feedback-content">
                                            <p>Thank you <strong> @Model.FirstName @Model.LastName </strong> for participating in the Interview MCQ tests! We appreciate your dedication to improving your skills.</p>
                                            <p>@Model.Feedback</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="achievedTests">
            @await Html.PartialAsync("_AchievedTestsAdminView", (List<AchievedTestViewModel>)ViewBag.AchievedTests)
        </div>
    </div>
</div>


