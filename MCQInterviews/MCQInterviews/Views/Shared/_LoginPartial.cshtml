@using Microsoft.AspNetCore.Identity
@using AuthSystem.Areas.Identity.Data
@using System.Security.Claims;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var userFullName = string.Empty;
    var userId = string.Empty;
    if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);
        if (currentUser!= null)
        {
            userId = currentUser.Id;
            userFullName = currentUser.FirstName + ' ' + currentUser.LastName;
        }
        
    }
}

@if (SignInManager.IsSignedIn(User))
{

    <span class="nav-link text-dark">Welcome <strong class="text-danger">@userFullName</strong></span>

        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
        <i class="fa fa-address-card"></i>
            Profile
        </a>
    
        @if (User.IsInRole("Admin"))
        {
            <a class="nav-link text-dark" asp-area="" asp-controller="AdminDashboard" asp-action="Index" title="Admin Dashboard">
            <i class="fas fa-columns"></i>  Dashboard
                </a>
        } else
        {
            <a class="nav-link text-dark" asp-area="" asp-controller="UserDashboard" asp-action="Dashboard" title="User Dashboard">
            <i class="fas fa-columns"></i>
                Dashboard
                </a>
        }
    
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <button type="submit" class="nav-link btn btn-link text-dark"><i class="fas fa-sign-out-alt"></i> Logout</button>
        </form>
   
}

else
{

    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-user-plus"></i> Register</a>

    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt"></i> Login</a>
   
}


